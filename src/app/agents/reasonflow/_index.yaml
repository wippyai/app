version: "1.0"
namespace: app.agents.reasonflow

entries:
  - name: main_agent
    kind: registry.entry
    meta:
      type: agent.gen1
      title: Reasoning Flow Agent
      tags: [reasoning, flow, public]
      class: [public]
    prompt: |
      You process complex tasks through piece-by-piece decomposition with reasoning loops.
      
      Use reason_task for problems requiring deep analytical breakdown and parallel reasoning.
    model: gpt-5-mini
    temperature: 0.3
    max_tokens: 8000
    tools:
      - id: app.agents.reasonflow:reason_task

  - name: decomposer_agent
    kind: registry.entry
    meta:
      type: agent.gen1
      title: Task Decomposer
      tags: [decomposer, reasoning]
    prompt: |
      Break complex tasks into 2-8 logical pieces for independent reasoning.
      
      Each piece needs:
      - Unique ID
      - Clear scope
      - Key question to answer
      - Dependencies (if any)
      
      If QA feedback exists, address completeness gaps and clarify ambiguities.
    model: gpt-5-mini
    temperature: 0.3
    max_tokens: 12000

  - name: decomposition_qa_agent
    kind: registry.entry
    meta:
      type: agent.gen1
      title: Decomposition QA
      tags: [qa, decomposition]
    prompt: |
      Review decomposition for completeness and logical coverage.
      
      Check:
      - All aspects of original task covered
      - No critical gaps
      - Pieces are independent enough
      - Scope boundaries clear
      
      Be strict but constructive.
    model: gpt-5-mini
    temperature: 0.2
    max_tokens: 8000

  - name: reasoning_agent
    kind: registry.entry
    meta:
      type: agent.gen1
      title: Reasoning Specialist
      tags: [reasoning, worker]
    prompt: |
      Apply deep reasoning to your assigned piece.
      
      Think through:
      - Core problem
      - Multiple approaches
      - Evidence and logic
      - Constraints
      - Conclusion
      
      If QA feedback exists, strengthen weak reasoning and fill gaps.
      
      Focus on producing complete, well-reasoned content for your piece.
    model: gpt-5-mini
    temperature: 0.4
    max_tokens: 16000

  - name: reasoning_qa_agent
    kind: registry.entry
    meta:
      type: agent.gen1
      title: Reasoning QA
      tags: [qa, reasoning]
    prompt: |
      Review reasoning quality and depth.
      
      Evaluate:
      - Logic soundness
      - Evidence support
      - Completeness
      - Clarity
      
      Reject shallow or incomplete reasoning. If reasoning is incomplete or has gaps,
      provide specific feedback so it can be strengthened in the next iteration.
    model: gpt-5-mini
    temperature: 0.2
    max_tokens: 8000

  - name: synthesis_agent
    kind: registry.entry
    meta:
      type: agent.gen1
      title: Synthesis Agent
      tags: [synthesis]
    prompt: |
      Synthesize all reasoning pieces into a comprehensive final answer.
      
      You receive:
      - Original task
      - All reasoning pieces with their conclusions
      - QA validation that confirms each piece is complete
      
      Create a unified markdown response that:
      
      ## For each piece, include:
      - The question it answered
      - The reasoning process
      - The conclusion reached
      - Key insights or evidence
      
      ## Final synthesis:
      - Integrate all pieces into a coherent whole
      - Resolve any contradictions or overlaps
      - Provide clear, actionable conclusion
      - Highlight key takeaways
      
      Use clear markdown structure with headers, lists, and emphasis.
      Be thorough but focused on the actual content, not the process.
    model: gpt-5-mini
    temperature: 0.3
    max_tokens: 20000

  - name: reason_task
    kind: function.lua
    meta:
      type: tool
      title: Reason Task
      input_schema: |
        {
          "type": "object",
          "properties": {
            "task": {"type": "string"},
            "decomposition_threshold": {"type": "number", "default": 8.5},
            "reasoning_threshold": {"type": "number", "default": 8.0}
          },
          "required": ["task"]
        }
      llm_description: Process complex task through decomposition cycle, parallel reasoning loops, and synthesis
    source: file://reason_task.lua
    modules: [json]
    imports:
      flow: userspace.dataflow.flow:flow
    method: handler

  - name: decomposition_cycle
    kind: function.lua
    meta:
      title: Decomposition Cycle
    source: file://decomposition_cycle.lua
    modules: [json]
    imports:
      flow: userspace.dataflow.flow:flow
    method: handler

  - name: reasoning_cycle
    kind: function.lua
    meta:
      title: Reasoning Cycle
    source: file://reasoning_cycle.lua
    modules: [json]
    imports:
      flow: userspace.dataflow.flow:flow
    method: run

  - name: decomposition_collector
    kind: function.lua
    meta:
      title: Decomposition Collector
    source: file://decomposition_collector.lua
    modules: [json]
    method: run

  - name: reasoning_collector
    kind: function.lua
    meta:
      title: Reasoning Collector
    source: file://reasoning_collector.lua
    modules: [json]
    method: run